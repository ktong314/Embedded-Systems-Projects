


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Ethan Litchauer and Kevin Tong
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; SSD1306_OutChar   outputs a single 8-bit ASCII charact
                       er
   10 00000000         ; SSD1306_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           SSD1306_OutChar
   13 00000000                 IMPORT           SSD1306_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000                 PRESERVE8
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 THUMB
   19 00000000         
   20 00000000         ;symbolic binding
   21 00000000 00000000 
                       CNT     EQU              0
   22 00000000 00000004 
                       N       EQU              4
   23 00000000        B 
                       FP      RN               11
   24 00000000         
   25 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   26 00000000         ; Output a 32-bit number in unsigned decimal format
   27 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   28 00000000         ; Output: none
   29 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   30 00000000         LCD_OutDec
   31 00000000         ;INIT 1
   32 00000000 F8CD B000       STR              FP, [SP]    ;push R11 first on 
                                                            stack as per AASCP
   33 00000004 B081            SUB              SP, SP, #4  ;allocation for R0
   34 00000006 9000            STR              R0, [SP]    ;R0 (#N) next
   35 00000008 B081            SUB              SP, SP, #4  ;allocation for CNT
                                                            
   36 0000000A F10D 0B00       ADD              FP, SP, #0  ;make R11 the stack
                                                             pointer (where CNT
                                                             will be)
   37 0000000E B081            SUB              SP, SP, #4  ;allocation for LR
   38 00000010         ;make FP = SP
   39 00000010         
   40 00000010         ;INIT 2
   41 00000010 F8CD E000       STR              LR, [SP]    ;store LR on stack
   42 00000014 F04F 0300       MOV              R3, #0
   43 00000018 F8CB 3000       STR              R3, [FP, #CNT] ;0 in for R3, th
                                                            en store for CNT
   44 0000001C F04F 030A       MOV              R3, #10     ;used to divide/mul
                                                            tiply by 10 later



ARM Macro Assembler    Page 2 


   45 00000020         
   46 00000020         readLoop
   47 00000020         ;#1
   48 00000020 F8DB 0000       LDR              R0, [FP,#CNT]
   49 00000024 F100 0001       ADD              R0, R0, #1
   50 00000028 F8CB 0000       STR              R0, [FP,#CNT] ;adds one to CNT 
                                                            for every digit tes
                                                            ted
   51 0000002C         
   52 0000002C         ;#2
   53 0000002C F8DB 1004       LDR              R1, [FP, #N]
   54 00000030 F101 0200       ADD              R2, R1, #0
   55 00000034 FBB1 F0F3       UDIV             R0, R1, R3  ;divide N by 10, de
                                                            leting ones digit a
                                                            nd moving all other
                                                            s over to the right
                                                            
   56 00000038 F8CB 0004       STR              R0, [FP, #N] ;store new number 
                                                            back into N
   57 0000003C FB00 F103       MUL              R1, R0, R3
   58 00000040 EBA2 0001       SUB              R0, R2, R1
   59 00000044 B081            SUB              SP, SP, #4  ;allocation
   60 00000046 9000            STR              R0, [SP]    ;store ones digit o
                                                            nto the stack
   61 00000048         
   62 00000048         ;#3
   63 00000048 F8DB 0004       LDR              R0, [FP, #N]
   64 0000004C 2800            CMP              R0, #0      ;check whether the 
                                                            ones digit is zero
   65 0000004E D000            BEQ              writeLoop   ;display all charac
                                                            ters on stack
   66 00000050 E7E6            B                readLoop    ;keep reading the N
                                                            
   67 00000052         
   68 00000052         writeLoop
   69 00000052         ;#4
   70 00000052 9800            LDR              R0,[SP]     ;load N number to d
                                                            isplay
   71 00000054 B001            ADD              SP, SP, #4  ;deallocate
   72 00000056 F100 0030       ADD              R0, R0, #0x30 ;turn into ASCII
   73 0000005A F7FF FFFE       BL               SSD1306_OutChar ;display
   74 0000005E         
   75 0000005E         ;#5
   76 0000005E F8DB 3000       LDR              R3, [FP, #CNT]
   77 00000062 F1A3 0301       SUB              R3, R3, #1
   78 00000066 F8CB 3000       STR              R3, [FP, #CNT] ;decrement count
                                                            down after each dis
                                                            play
   79 0000006A         
   80 0000006A         ;#6
   81 0000006A 2B00            CMP              R3, #0      ;if countdown is ze
                                                            ro, wrap it up. Oth
                                                            erwise, keep displa
                                                            ying
   82 0000006C D000            BEQ              continue
   83 0000006E E7F0            B                writeLoop
   84 00000070         
   85 00000070         continue
   86 00000070         ;#7



ARM Macro Assembler    Page 3 


   87 00000070 F8DD E000       LDR              LR, [SP]    ;pop LR to return t
                                                            o previous program
   88 00000074 B002            ADD              SP, SP, #8
   89 00000076 F8DD B000       LDR              FP, [SP]    ;pop R11 as per AAS
                                                            CP
   90 0000007A 4770            BX               LR
   91 0000007C         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   92 0000007C         
   93 0000007C         ; -----------------------LCD _OutFix--------------------
                       --
   94 0000007C         ; Output characters to LCD display in fixed-point format
                       
   95 0000007C         ; unsigned decimal, resolution 0.01, range 0.00 to 9.99
   96 0000007C         ; Inputs:  R0 is an unsigned 32-bit number
   97 0000007C         ; Outputs: none
   98 0000007C         ; E.g., R0=0,    then output "0.00 "
   99 0000007C         ;       R0=3,    then output "0.03 "
  100 0000007C         ;       R0=89,   then output "0.89 "
  101 0000007C         ;       R0=123,  then output "1.23 "
  102 0000007C         ;       R0=999,  then output "9.99 "
  103 0000007C         ;       R0>999,  then output "*.** "
  104 0000007C         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  105 0000007C         LCD_OutFix
  106 0000007C         ;INIT 1 (same steps as OUTDEC)
  107 0000007C F8CD B000       STR              FP, [SP]
  108 00000080 B081            SUB              SP, SP, #4
  109 00000082 9000            STR              R0, [SP]
  110 00000084 B081            SUB              SP, SP, #4
  111 00000086 F10D 0B00       ADD              FP, SP, #0
  112 0000008A B081            SUB              SP, SP, #4
  113 0000008C         ;make FP = SP
  114 0000008C         
  115 0000008C         ;INIT 2 (same steps as OUTDEC)
  116 0000008C F8CD E000       STR              LR, [SP]    ;store LR on stack
  117 00000090 F04F 0300       MOV              R3, #0
  118 00000094 F8CB 3000       STR              R3, [FP, #CNT]
  119 00000098 F04F 030A       MOV              R3, #10
  120 0000009C         
  121 0000009C         ;#1
  122 0000009C F8DB 2004       LDR              R2, [FP, #N]
  123 000000A0 F5B2 7F7A       CMP              R2, #1000
  124 000000A4 D310            BLO              range       ;if greater than 10
                                                            00, display asteris
                                                            k symbols. Otherwis
                                                            e, read for floatin
                                                            g point
  125 000000A6         
  126 000000A6         ;#2
  127 000000A6 F04F 002A       MOV              R0, #0x2A   ;asterisk 1
  128 000000AA F7FF FFFE       BL               SSD1306_OutChar
  129 000000AE         
  130 000000AE         ;#3
  131 000000AE F04F 002E       MOV              R0, #0x2E   ;decimal point
  132 000000B2 F7FF FFFE       BL               SSD1306_OutChar
  133 000000B6         
  134 000000B6         ;#4
  135 000000B6 F04F 002A       MOV              R0, #0x2A   ;asterisk 2
  136 000000BA F7FF FFFE       BL               SSD1306_OutChar



ARM Macro Assembler    Page 4 


  137 000000BE         
  138 000000BE         ;#5
  139 000000BE F04F 002A       MOV              R0, #0x2A   ;asterisk 3
  140 000000C2 F7FF FFFE       BL               SSD1306_OutChar
  141 000000C6 E02D            B                exit
  142 000000C8         
  143 000000C8         range                                ;#6 for OUTFIX, #1 
                                                            from OUTDEC
  144 000000C8 F8DB 0000       LDR              R0, [FP,#CNT]
  145 000000CC F100 0001       ADD              R0, R0, #1
  146 000000D0 F8CB 0000       STR              R0, [FP,#CNT]
  147 000000D4         
  148 000000D4         ;#7 for OUTFIX, #2 from OUTDEC
  149 000000D4 F8DB 1004       LDR              R1, [FP, #N]
  150 000000D8 F101 0200       ADD              R2, R1, #0
  151 000000DC FBB1 F0F3       UDIV             R0, R1, R3
  152 000000E0 F8CB 0004       STR              R0, [FP, #N]
  153 000000E4 FB00 F103       MUL              R1, R0, R3
  154 000000E8 EBA2 0001       SUB              R0, R2, R1
  155 000000EC B081            SUB              SP, SP, #4
  156 000000EE 9000            STR              R0, [SP]
  157 000000F0         
  158 000000F0         ;#8
  159 000000F0 F8DB 1000       LDR              R1, [FP, #CNT]
  160 000000F4 2903            CMP              R1, #3
  161 000000F6 D3E7            BLO              range       ;check if number ca
                                                            n be converted into
                                                             floating point wit
                                                            h ones, tenths and 
                                                            hundredths places
  162 000000F8         
  163 000000F8         ;#9
  164 000000F8 9800            LDR              R0,[SP]
  165 000000FA B001            ADD              SP, SP, #4
  166 000000FC F100 0030       ADD              R0, R0, #0x30
  167 00000100 F7FF FFFE       BL               SSD1306_OutChar 
                                                            ;first character
  168 00000104         
  169 00000104 F04F 002E       MOV              R0, #0x2E
  170 00000108 F7FF FFFE       BL               SSD1306_OutChar ;decimal point
  171 0000010C         
  172 0000010C 9800            LDR              R0,[SP]
  173 0000010E B001            ADD              SP, SP, #4
  174 00000110 F100 0030       ADD              R0, R0, #0x30
  175 00000114 F7FF FFFE       BL               SSD1306_OutChar 
                                                            ;second character
  176 00000118         
  177 00000118 9800            LDR              R0,[SP]
  178 0000011A B001            ADD              SP, SP, #4
  179 0000011C F100 0030       ADD              R0, R0, #0x30
  180 00000120 F7FF FFFE       BL               SSD1306_OutChar 
                                                            ;third character
  181 00000124         
  182 00000124         exit                                 ;#10 (same as OUTDE
                                                            C #7)
  183 00000124 F8DD E000       LDR              LR, [SP]
  184 00000128 B002            ADD              SP, SP, #8
  185 0000012A F8DD B000       LDR              FP, [SP]
  186 0000012E 4770            BX               LR



ARM Macro Assembler    Page 5 


  187 00000130                 ALIGN
  188 00000130         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  189 00000130         
  190 00000130                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  191 00000130                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_Lab10 -IC:\Users\ethan\AppData\Loca
l\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Users\ethan\AppData\Local\A
rm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__UVISION_VERS
ION SETA 533" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --pr
edefine="_RTE_ SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 30 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 0000007C

Symbol: LCD_OutFix
   Definitions
      At line 105 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
continue 00000070

Symbol: continue
   Definitions
      At line 85 in file Print.s
   Uses
      At line 82 in file Print.s
Comment: continue used once
exit 00000124

Symbol: exit
   Definitions
      At line 182 in file Print.s
   Uses
      At line 141 in file Print.s
Comment: exit used once
range 000000C8

Symbol: range
   Definitions
      At line 143 in file Print.s
   Uses
      At line 124 in file Print.s
      At line 161 in file Print.s

readLoop 00000020

Symbol: readLoop
   Definitions
      At line 46 in file Print.s
   Uses
      At line 66 in file Print.s
Comment: readLoop used once
writeLoop 00000052




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: writeLoop
   Definitions
      At line 68 in file Print.s
   Uses
      At line 65 in file Print.s
      At line 83 in file Print.s

8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

CNT 00000000

Symbol: CNT
   Definitions
      At line 21 in file Print.s
   Uses
      At line 43 in file Print.s
      At line 48 in file Print.s
      At line 50 in file Print.s
      At line 76 in file Print.s
      At line 78 in file Print.s
      At line 118 in file Print.s
      At line 144 in file Print.s
      At line 146 in file Print.s
      At line 159 in file Print.s

N 00000004

Symbol: N
   Definitions
      At line 22 in file Print.s
   Uses
      At line 53 in file Print.s
      At line 56 in file Print.s
      At line 63 in file Print.s
      At line 122 in file Print.s
      At line 149 in file Print.s
      At line 152 in file Print.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SSD1306_OutChar 00000000

Symbol: SSD1306_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 73 in file Print.s
      At line 128 in file Print.s
      At line 132 in file Print.s
      At line 136 in file Print.s
      At line 140 in file Print.s
      At line 167 in file Print.s
      At line 170 in file Print.s
      At line 175 in file Print.s
      At line 180 in file Print.s

SSD1306_OutString 00000000

Symbol: SSD1306_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: SSD1306_OutString unused
2 symbols
345 symbols in table
